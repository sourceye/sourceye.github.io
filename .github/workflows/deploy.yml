name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy_function:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./serverside
    outputs:
      function_uri: ${{ steps.output.function_uri }}
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
      - name: Init terraform
        run: terraform init
      - name: Prep credentials
        run: echo $GCP_CREDENTIALS >> credentials.json
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_TERRAFORM_CREDENTIALS }}
      - name: refresh state
        run: terraform refresh
      - name: Apply terraform
        env:
          TF_VAR_notion_api_key: ${{ secrets.NOTION_API_KEY }}
          TF_VAR_notion_db_id: ${{ secrets.NOTION_DB_ID }}
        run: terraform plan
      - id: output
        run: echo "function_uri=$(terraform output function_uri)" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3
      - name: Install, build, and upload your site
        uses: withastro/action@v0
        # with:
        # path: . # The root location of your Astro project inside the repository. (optional)
        # node-version: 16 # The specific version of Node that should be used to build your site. Defaults to 16. (optional)
        # package-manager: yarn # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
